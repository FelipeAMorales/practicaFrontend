pipeline {
    agent any

    parameters {
        string(name: 'name_container', defaultValue: 'felipemoralescybertrust', description: 'nombre del docker')
        string(name: 'name_imagen_front', defaultValue: 'practicafrontct', description: 'nombre de la imagen del front')
        string(name: 'tag_imagen', defaultValue: 'latest', description: 'etiqueta de la imagen')
        string(name: 'puerto_imagen', defaultValue: '81', description: 'puerto a publicar')
        string(name: 'name_imagen_back', defaultValue: 'practicabackct',description: 'nombre de la imagen del back')
    }

    environment {
        name_final_front = "${name_container}/${name_imagen_front}:${tag_imagen}"
        name_final_back = "${name_container}/${name_imagen_back}:${tag_imagen}"
    }

    stages {
        stage('stop/rm_primero') {
            when {
                expression {
                    DOCKER_EXIST = bat(returnStatus: true, script: "docker ps -q --filter name=${name_final_front}")
                    return DOCKER_EXIST.toInteger() != 0
                }
            }
            steps {
                script {
                    bat """
                        docker stop ${name_final_front}
                        docker rm ${name_final_front}
                    """
                }
            }
        }
        stage('stop/rm_segundo') {
            when {
                expression {
                    DOCKER_EXIST = bat(returnStatus: true, script: "docker ps -q --filter name=${name_final_back}")
                    return DOCKER_EXIST.toInteger() != 0
                }
            }
            steps {
                script {
                    bat """
                        docker stop ${name_final_back}
                        docker rm ${name_final_back}
                    """
                }
            }
        }

        stage('build_primero') {
            steps {
                script {
                    bat """
                        docker build -t ${name_final_front} .
                    """
                }
            }
        }
        stage('build_segundo') {
            steps {
                script {
                    bat """
                        docker build -t ${name_final_back} .
                    """
                }
            }
        }
    }
}